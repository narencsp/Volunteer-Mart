{"ast":null,"code":"var _jsxFileName = \"/Users/manrajsingh/Documents/Dal_Web_Lab/LAB3/LoginPage/Dal_Web_Group10/src/Pages/ThirdPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'; //import { useLocation } from 'react-router-dom';\n\nimport axios from 'axios';\nimport { CardComponent } from '../Components/CardComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThirdPage() {\n  _s();\n\n  console.log(\"Third Page\"); //const location = useLocation();\n  //const email = location.state.email;\n  //const password = location.state.password;\n  //console.log(email);\n  //console.log(password);\n\n  const getUrl = 'https://tutorial4-api.herokuapp.com/api/users/';\n  const [records, setRecords] = useState([]);\n  const [sortDirection, setSortDirection] = useState(\"NoFilter\");\n\n  async function fetchData() {\n    await axios.get(getUrl).then(response => {\n      //console.log(JSON.stringify(response));\n      setRecords(response.data.data);\n    }).catch(error => {//console.log(error);\n    }); // console.log(\"Records\");\n\n    console.log(records);\n  }\n\n  fetchData();\n\n  const sortArray = Type => {\n    const Types = {\n      NoFilter: \"id\",\n      FirstName: \"firstName\",\n      LastName: \"lastName\"\n    };\n    const sortProperty = Types[Type];\n    const temp = records;\n    const sorted = temp.sort((a, b) => a[sortProperty].localeCompare(b[sortProperty])); //console.log(Type);\n    //console.log(sortProperty);\n    //console.log(records[0][sortProperty]);\n    //records = null;\n\n    setRecords(sorted);\n    console.log(temp);\n    setSortDirection(Type);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      className: \"m-5\",\n      padding: \"10\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => sortArray(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"NoFilter\",\n              children: \"Select Sortby option:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"FirstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"LastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), records.map(record => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(CardComponent, {\n              ID: record.id,\n              title: record.title,\n              firstName: record.firstName,\n              lastName: record.lastName,\n              picture: record.picture,\n              email: record.email,\n              sortDirection: sortDirection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ThirdPage, \"lc1TQziPW/pBxctiagq9OVEJPFg=\");\n\n_c = ThirdPage;\nexport default ThirdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThirdPage\");","map":{"version":3,"sources":["/Users/manrajsingh/Documents/Dal_Web_Lab/LAB3/LoginPage/Dal_Web_Group10/src/Pages/ThirdPage.js"],"names":["useEffect","useState","Container","Row","Col","axios","CardComponent","ThirdPage","console","log","getUrl","records","setRecords","sortDirection","setSortDirection","fetchData","get","then","response","data","catch","error","sortArray","Type","Types","NoFilter","FirstName","LastName","sortProperty","temp","sorted","sort","a","b","localeCompare","e","target","value","map","record","id","title","firstName","lastName","picture","email"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport {Container, Row, Col } from 'react-bootstrap';\n//import { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport {CardComponent} from '../Components/CardComponent';\nfunction ThirdPage(){\n        console.log(\"Third Page\");\n        //const location = useLocation();\n        //const email = location.state.email;\n        //const password = location.state.password;\n        //console.log(email);\n        //console.log(password);\n        const getUrl = 'https://tutorial4-api.herokuapp.com/api/users/';\n        const [records, setRecords] = useState([]); \n        const [sortDirection, setSortDirection] = useState(\"NoFilter\");\n        \n        \n            async function fetchData(){\n                await axios.get(getUrl)\n                .then(response => {\n                    //console.log(JSON.stringify(response));\n                    setRecords(response.data.data);\n                    \n                })\n                .catch(error => {\n                    //console.log(error);\n                });\n\n                // console.log(\"Records\");\n                console.log(records);\n            }\n            fetchData();\n       \n\n        const sortArray = (Type) =>{\n            const Types = {\n                NoFilter: \"id\",\n                FirstName: \"firstName\",\n                LastName: \"lastName\" \n            };\n            const sortProperty = Types[Type];\n            const temp = records;\n            const sorted = temp.sort((a,b) => a[sortProperty].localeCompare(b[sortProperty]));\n            //console.log(Type);\n            //console.log(sortProperty);\n            //console.log(records[0][sortProperty]);\n            //records = null;\n            setRecords(sorted);\n            console.log(temp);\n            setSortDirection(Type);\n\n            \n        }\n                    \n\n    return (<div>\n        <Container fluid='md' className = 'm-5' padding = \"10\">\n            <Row>\n                <Col>\n                <select onChange={(e) => sortArray(e.target.value)}>\n                    <option value=\"NoFilter\">Select Sortby option:</option>\n                    <option value=\"FirstName\">First Name</option>\n                    <option value=\"LastName\">Last Name</option>\n                </select>\n                </Col>\n            </Row>\n            {records.map((record) => {\n                return (\n                <Row>\n                    <Col>\n                        <CardComponent ID = {record.id} title = {record.title} firstName = {record.firstName} lastName = {record.lastName} picture = {record.picture} email = {record.email} sortDirection = {sortDirection}/>\n                    </Col>\n                </Row>\n                );\n            })}\n        </Container>\n    </div>);\n}\n\nexport default ThirdPage;"]},"metadata":{},"sourceType":"module"}